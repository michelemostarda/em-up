/*
 * Copyright 2007-2008 Michele Mostarda ( michele.mostarda@gmail.com ).
 * All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.asemantics.lightparser;

/**
 * Represents a token generated by the {@link com.asemantics.lightparser.Tokenizer}.
 */
public class Token implements Comparable<Token> {

    /**
     * Index of the first token char in the stream.
     */
    private int begin;

    /**
     * Row of the token in the stream.
     */
    private int row;

    /**
     * Column of the token in the stram.
     */
    private int col;

    /**
     * Value of the token.
     */
    private String value;

    /**
     * Constructor.
     *
     * @param b absolute begin index in input stream.
     * @param r token row location.
     * @param c token column location.
     * @param v token value.
     */
    protected Token(int b, int r, int c, String v) {
        begin = b;
        row   = r;
        col   = c;
        value = v;
    }

    /**
     * Returns the token value.
     *
     * @return token string
     */
    public String getValue() {
        return value;
    }

    /**
     * Returns the token length.
     *
     * @return token length in number of chars.
     */
    public int getLength() {
        return value.length();
    }

    /**
     * Returns the token begin index.
     *
     * @return begin index.
     */
    public int getBegin() {
        return begin;
    }

    /**
     * Returns the token end index.
     * 
     * @return end index.
     */
    public int getEnd() {
        return begin + getLength();
    }

    /**
     * Returns the location of current token.
     *
     * @return location of this token.
     */
    public Location getLocation() {
        return new Location( row, col );
    }

    @Override
    public String toString() {
        return this.getClass() + "[" + value + "]("+ begin+ "," + row + "," + col +")";
    }

    public int compareTo(Token t) {
        return t.begin - begin; 
    }
}
